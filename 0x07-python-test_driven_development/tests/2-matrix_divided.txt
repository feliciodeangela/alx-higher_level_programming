"""
>>> mat = __import__('2-matrix_divided').matrix_divided

>>> rix = [[3, 6, 9], [6, 3, 9], [9, 6, 3]]
>>> mat(rix, 3)
[[1.0, 2.0, 3.0], [2.0, 1.0, 3.0], [3.0, 2.0, 1.0]]

>>> mat(rix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> rix = [[3, 6, 9], [6, 3, 9], [9, 6]]
>>> mat(rix, 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> rix = [[3, 6, 9], [6, 3, 9], (9, 6, 3)]
>>> mat(rix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> rix = [[3, 6, 9], [6, 3, 9], [9, 6, "3"]]
>>> mat(rix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> mat(rix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> mat(rix, "0")
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> mat(rix, None)
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> mat(None, 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> mat(None, None)
Traceback (most recent call last):
  ..
TypeError: div must be a number

>>> mat(rix)
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> mat()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

"""
